name: integration

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - '*rc'
      - 'release/*'
  pull_request:
  workflow_dispatch:

jobs:
  integration:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    steps:
      # Monorepo tests
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: npm i
        working-directory: ops-constellation
      
      - run: cp example_envs/.CI.env .env
        working-directory: ops-constellation

      - run: npx hardhat node --port 9545 --hostname 0.0.0.0 > hardhat.log 2>&1 &
        working-directory: ops-constellation

      - run: bash ./constellation-up.sh
        working-directory: ops-constellation

      - name: Wait for the Sequencer node
        working-directory: ./ops-constellation
        run: ./scripts/wait-for-sequencer.sh

      - name: Run the integration tests
        working-directory: ./ops-constellation
        run: bash ./constellation-integration-tests.sh
        env:
          INTEGRATION_TEST_REPLICAS: 1
          CI: true

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          images: 'l1_chain,ops-constellation_deployer,ops-constellation_dtl,ops-constellation_l2geth,ethereumoptimism/message-relayer,ops-constellation_batch_submitter,ops-constellation_replica,ops-constellation_integration_tests'
          dest: '/home/runner/logs'

      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ~/logs

      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
